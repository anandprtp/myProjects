-- Q1: List the first name, last name, and email of all customers in the customer table.
SELECT first_name, last_name, email FROM customer;

-- Q2: List all customers who live in the city “London”. Include their first name, last name, and city.
SELECT cx.first_name,
    cx.last_name,
    c.city
FROM customer cx
    JOIN address a ON cx.address_id = a.address_id
    JOIN city c ON a.city_id = c.city_id
WHERE c.city = 'London';

-- Q3: Find the total number of rentals for each customer. 
-- List the customer’s first name, last name, and the total number of rentals, sorted from highest to lowest rentals.
SELECT cx.first_name,
    cx.last_name,
    COUNT(r.customer_id) AS rentals
FROM customer cx
    JOIN rental r ON cx.customer_id = r.customer_id
GROUP BY cx.customer_id
ORDER BY rentals DESC;

-- Q4: Find the top 5 films with the highest number of rentals. Show film_id, title, and number of rentals.
SELECT f.film_id,
    f.title,
    COUNT(*) AS rentals
FROM film f
    JOIN inventory i ON f.film_id = i.film_id
    JOIN rental r ON i.inventory_id = r.inventory_id
GROUP BY f.film_id
ORDER BY rentals DESC
LIMIT 5;

-- Q5: Find the total revenue generated by each film. Include film_id, title, and total revenue, sorted from highest to lowest revenue.
SELECT f.film_id,
    f.title,
    SUM(p.amount) AS total_revenue
FROM film f
    JOIN inventory i ON f.film_id = i.film_id
    JOIN rental r ON i.inventory_id = r.inventory_id
    JOIN payment p ON r.rental_id = p.rental_id
GROUP BY f.film_id
ORDER BY total_revenue DESC;

-- Q6: Find all customers who have never rented a film. Show their customer_id, first_name, and last_name.
SELECT c.customer_id,
    c.first_name,
    c.last_name
FROM customer c
    LEFT JOIN rental r ON c.customer_id = r.customer_id
WHERE r.customer_id IS NULL;

-- Q7: For each customer, show their first_name, last_name, and the rank of their total rentals 
-- compared to all other customers. Customers with the same number of rentals should get the same rank.
WITH cte AS (
    SELECT c.customer_id,
        c.first_name,
        c.last_name,
        COUNT(r.customer_id) AS total_rentals
    FROM customer c
        JOIN rental r ON c.customer_id = r.customer_id
    GROUP BY c.customer_id
)
SELECT *,
    DENSE_RANK() OVER(
        ORDER BY total_rentals DESC
    )
FROM cte;

-- Q8: Find the top 3 categories (from the category table) that generated the highest total revenue. Show category_name and total_revenue.

